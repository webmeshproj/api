/*
Copyright 2023.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

syntax = "proto3";

package v1;

import "google/protobuf/empty.proto";

import "v1/mesh_messages.proto";

// Mesh is a service that can optionally be exposed by a node. It provides methods for 
// interfacing with the webmesh from the outside. Some methods are only available on the
// leader. Nodes can enable the leader proxy to expose the leader's Mesh service.
service Mesh {
    // GetNode gets a node by ID.
    rpc GetNode(GetNodeRequest) returns (MeshNode) {}

    // ListNodes lists all nodes.
    rpc ListNodes(google.protobuf.Empty) returns (NodeList) {}

    // GetMeshGraph fetches the mesh graph. It returns a list of nodes,
    // edges, and a rendering in the dot format.
    rpc GetMeshGraph(google.protobuf.Empty) returns (MeshGraph) {}
}
