/*
Copyright 2023.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

syntax = "proto3";

package v1;

import "google/protobuf/duration.proto";

// RaftCommandType is the type of command being sent to the
// Raft log.
enum RaftCommandType {
    // UNKNOWN is the unknown command type.
    UNKNOWN = 0;
    // PUT is the command for putting a key/value pair.
    PUT = 1;
    // DELETE is the command for deleting a key/value pair.
    DELETE = 2;
}

// RaftLogEntry is the data of an entry in the Raft log.
message RaftLogEntry {
    // type is the type of the log entry.
    RaftCommandType type = 1;
    // key is the key of the log entry.
    string key = 2;
    // value is the value of the log entry.
    string value = 3;
    // ttl is the time to live of the log entry.
    google.protobuf.Duration ttl = 4;
}

// RaftApplyResponse is the response to an apply request. It
// contains the result of applying the log entry.
message RaftApplyResponse {
    // time is the total time it took to apply the log entry.
    string time = 1;
    // error is an error that occurred during the apply.
    string error = 2;
}

// RaftSnapshot is the data of a snapshot.
message RaftSnapshot {
    map<string, RaftDataItem> kv = 1;
}

// RaftDataItem represents a value in the Raft data store.
message RaftDataItem {
    // key is the key of the data item.
    string key = 1;
    // value is the value of the data item.
    string value = 2;
    // ttl is the time to live of the data item.
    google.protobuf.Duration ttl = 3;
}