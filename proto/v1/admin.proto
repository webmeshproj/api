/*
Copyright 2023.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

syntax = "proto3";

package v1;

import "google/protobuf/empty.proto";
import "v1/rbac.proto";

// Admin is the service that provides cluster admin operations. Most methods 
// require the leader to be contacted.
service Admin {
    // RBAC operations

    // PutRole creates or updates a role.
    rpc PutRole(Role) returns (google.protobuf.Empty) {}
    // DeleteRole deletes a role.
    rpc DeleteRole(Role) returns (google.protobuf.Empty) {}
    // GetRole gets a role.
    rpc GetRole(Role) returns (Role) {}
    // ListRoles gets all roles.
    rpc ListRoles(google.protobuf.Empty) returns (Roles) {}

    // PutRoleBinding creates or updates a role binding.
    rpc PutRoleBinding(RoleBinding) returns (google.protobuf.Empty) {}
    // DeleteRoleBinding deletes a role binding.
    rpc DeleteRoleBinding(RoleBinding) returns (google.protobuf.Empty) {}
    // GetRoleBinding gets a role binding.
    rpc GetRoleBinding(RoleBinding) returns (RoleBinding) {}
    // ListRoleBindings gets all role bindings.
    rpc ListRoleBindings(google.protobuf.Empty) returns (RoleBindings) {}

    // PutGroup creates or updates a group.
    rpc PutGroup(Group) returns (google.protobuf.Empty) {}
    // DeleteGroup deletes a group.
    rpc DeleteGroup(Group) returns (google.protobuf.Empty) {}
    // GetGroup gets a group.
    rpc GetGroup(Group) returns (Group) {}
    // ListGroups gets all groups.
    rpc ListGroups(google.protobuf.Empty) returns (Groups) {}
}
