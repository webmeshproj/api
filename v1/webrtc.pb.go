//
//Copyright 2023.
//
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: v1/webrtc.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// StartDataChannelRequest is a request to start a data channel.
// The answer and candidate fields are populated after the offer
// is received.
type StartDataChannelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// node_id is the ID of the node to send the data to.
	NodeId string `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	// proto is the protocol of the traffic.
	Proto string `protobuf:"bytes,2,opt,name=proto,proto3" json:"proto,omitempty"`
	// dst is the destination address of the traffic.
	Dst string `protobuf:"bytes,3,opt,name=dst,proto3" json:"dst,omitempty"`
	// port is the destination port of the traffic. A port of 0 coupled
	// with the udp protocol indicates forwarding to the WireGuard interface.
	Port uint32 `protobuf:"varint,4,opt,name=port,proto3" json:"port,omitempty"`
	// answer is the answer to the offer.
	Answer string `protobuf:"bytes,5,opt,name=answer,proto3" json:"answer,omitempty"`
	// candidate is an ICE candidate.
	Candidate string `protobuf:"bytes,6,opt,name=candidate,proto3" json:"candidate,omitempty"`
}

func (x *StartDataChannelRequest) Reset() {
	*x = StartDataChannelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_webrtc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartDataChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartDataChannelRequest) ProtoMessage() {}

func (x *StartDataChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_webrtc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartDataChannelRequest.ProtoReflect.Descriptor instead.
func (*StartDataChannelRequest) Descriptor() ([]byte, []int) {
	return file_v1_webrtc_proto_rawDescGZIP(), []int{0}
}

func (x *StartDataChannelRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *StartDataChannelRequest) GetProto() string {
	if x != nil {
		return x.Proto
	}
	return ""
}

func (x *StartDataChannelRequest) GetDst() string {
	if x != nil {
		return x.Dst
	}
	return ""
}

func (x *StartDataChannelRequest) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *StartDataChannelRequest) GetAnswer() string {
	if x != nil {
		return x.Answer
	}
	return ""
}

func (x *StartDataChannelRequest) GetCandidate() string {
	if x != nil {
		return x.Candidate
	}
	return ""
}

// DataChannelOffer is an offer for a data channel. Candidates
// are sent after the offer is sent.
type DataChannelOffer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// offer is the offer.
	Offer string `protobuf:"bytes,1,opt,name=offer,proto3" json:"offer,omitempty"`
	// stun_servers is the list of STUN servers to use.
	StunServers []string `protobuf:"bytes,2,rep,name=stun_servers,json=stunServers,proto3" json:"stun_servers,omitempty"`
	// candidate is an ICE candidate.
	Candidate string `protobuf:"bytes,3,opt,name=candidate,proto3" json:"candidate,omitempty"`
}

func (x *DataChannelOffer) Reset() {
	*x = DataChannelOffer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_webrtc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataChannelOffer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataChannelOffer) ProtoMessage() {}

func (x *DataChannelOffer) ProtoReflect() protoreflect.Message {
	mi := &file_v1_webrtc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataChannelOffer.ProtoReflect.Descriptor instead.
func (*DataChannelOffer) Descriptor() ([]byte, []int) {
	return file_v1_webrtc_proto_rawDescGZIP(), []int{1}
}

func (x *DataChannelOffer) GetOffer() string {
	if x != nil {
		return x.Offer
	}
	return ""
}

func (x *DataChannelOffer) GetStunServers() []string {
	if x != nil {
		return x.StunServers
	}
	return nil
}

func (x *DataChannelOffer) GetCandidate() string {
	if x != nil {
		return x.Candidate
	}
	return ""
}

var File_v1_webrtc_proto protoreflect.FileDescriptor

var file_v1_webrtc_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x76, 0x31, 0x2f, 0x77, 0x65, 0x62, 0x72, 0x74, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x02, 0x76, 0x31, 0x1a, 0x0d, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa4, 0x01, 0x0a, 0x17, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x10, 0x0a, 0x03, 0x64, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x22, 0x69, 0x0a, 0x10, 0x44,
	0x61, 0x74, 0x61, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x12,
	0x14, 0x0a, 0x05, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6f, 0x66, 0x66, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x75, 0x6e, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x75,
	0x6e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x61, 0x6e, 0x64,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x61, 0x6e,
	0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x32, 0x95, 0x01, 0x0a, 0x06, 0x57, 0x65, 0x62, 0x52, 0x54,
	0x43, 0x12, 0x4b, 0x0a, 0x10, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x1b, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x14, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x12, 0x3e,
	0x0a, 0x12, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x10, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x62, 0x52, 0x54, 0x43,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x1a, 0x10, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x62, 0x52,
	0x54, 0x43, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x42, 0x67,
	0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x42, 0x0b, 0x57, 0x65, 0x62, 0x72, 0x74, 0x63,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x65, 0x62, 0x6d, 0x65, 0x73, 0x68, 0x70, 0x72, 0x6f, 0x6a, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x77, 0x65, 0x62, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x76, 0x31, 0x2f, 0x76,
	0x31, 0xa2, 0x02, 0x03, 0x56, 0x58, 0x58, 0xaa, 0x02, 0x02, 0x56, 0x31, 0xca, 0x02, 0x02, 0x56,
	0x31, 0xe2, 0x02, 0x0e, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0xea, 0x02, 0x02, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v1_webrtc_proto_rawDescOnce sync.Once
	file_v1_webrtc_proto_rawDescData = file_v1_webrtc_proto_rawDesc
)

func file_v1_webrtc_proto_rawDescGZIP() []byte {
	file_v1_webrtc_proto_rawDescOnce.Do(func() {
		file_v1_webrtc_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_webrtc_proto_rawDescData)
	})
	return file_v1_webrtc_proto_rawDescData
}

var file_v1_webrtc_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_v1_webrtc_proto_goTypes = []interface{}{
	(*StartDataChannelRequest)(nil), // 0: v1.StartDataChannelRequest
	(*DataChannelOffer)(nil),        // 1: v1.DataChannelOffer
	(*WebRTCSignal)(nil),            // 2: v1.WebRTCSignal
}
var file_v1_webrtc_proto_depIdxs = []int32{
	0, // 0: v1.WebRTC.StartDataChannel:input_type -> v1.StartDataChannelRequest
	2, // 1: v1.WebRTC.StartSignalChannel:input_type -> v1.WebRTCSignal
	1, // 2: v1.WebRTC.StartDataChannel:output_type -> v1.DataChannelOffer
	2, // 3: v1.WebRTC.StartSignalChannel:output_type -> v1.WebRTCSignal
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_v1_webrtc_proto_init() }
func file_v1_webrtc_proto_init() {
	if File_v1_webrtc_proto != nil {
		return
	}
	file_v1_node_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_v1_webrtc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartDataChannelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_webrtc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataChannelOffer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_webrtc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_webrtc_proto_goTypes,
		DependencyIndexes: file_v1_webrtc_proto_depIdxs,
		MessageInfos:      file_v1_webrtc_proto_msgTypes,
	}.Build()
	File_v1_webrtc_proto = out.File
	file_v1_webrtc_proto_rawDesc = nil
	file_v1_webrtc_proto_goTypes = nil
	file_v1_webrtc_proto_depIdxs = nil
}
