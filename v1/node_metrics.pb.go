//
//Copyright 2023.
//
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: v1/node_metrics.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// InterfaceMetrics is the metrics for the WireGuard interface on a node.
type InterfaceMetrics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// device_name is the name of the device.
	DeviceName string `protobuf:"bytes,1,opt,name=device_name,json=deviceName,proto3" json:"device_name,omitempty"`
	// public_key is the public key of the node.
	PublicKey string `protobuf:"bytes,2,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	// address_v4 is the IPv4 address of the node.
	AddressV4 string `protobuf:"bytes,3,opt,name=address_v4,json=addressV4,proto3" json:"address_v4,omitempty"`
	// address_v6 is the IPv6 address of the node.
	AddressV6 string `protobuf:"bytes,4,opt,name=address_v6,json=addressV6,proto3" json:"address_v6,omitempty"`
	// type is the type of interface being used for wireguard.
	Type string `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	// listen_port is the port wireguard is listening on.
	ListenPort int32 `protobuf:"varint,6,opt,name=listen_port,json=listenPort,proto3" json:"listen_port,omitempty"`
	// total_receive_bytes is the total number of bytes received.
	TotalReceiveBytes uint64 `protobuf:"varint,7,opt,name=total_receive_bytes,json=totalReceiveBytes,proto3" json:"total_receive_bytes,omitempty"`
	// total_transmit_bytes is the total number of bytes transmitted.
	TotalTransmitBytes uint64 `protobuf:"varint,8,opt,name=total_transmit_bytes,json=totalTransmitBytes,proto3" json:"total_transmit_bytes,omitempty"`
	// num_peers is the number of peers connected to the node.
	NumPeers int32 `protobuf:"varint,9,opt,name=num_peers,json=numPeers,proto3" json:"num_peers,omitempty"`
	// peers are the per-peer statistics.
	Peers []*PeerMetrics `protobuf:"bytes,10,rep,name=peers,proto3" json:"peers,omitempty"`
}

func (x *InterfaceMetrics) Reset() {
	*x = InterfaceMetrics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_node_metrics_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterfaceMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterfaceMetrics) ProtoMessage() {}

func (x *InterfaceMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_v1_node_metrics_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterfaceMetrics.ProtoReflect.Descriptor instead.
func (*InterfaceMetrics) Descriptor() ([]byte, []int) {
	return file_v1_node_metrics_proto_rawDescGZIP(), []int{0}
}

func (x *InterfaceMetrics) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *InterfaceMetrics) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *InterfaceMetrics) GetAddressV4() string {
	if x != nil {
		return x.AddressV4
	}
	return ""
}

func (x *InterfaceMetrics) GetAddressV6() string {
	if x != nil {
		return x.AddressV6
	}
	return ""
}

func (x *InterfaceMetrics) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *InterfaceMetrics) GetListenPort() int32 {
	if x != nil {
		return x.ListenPort
	}
	return 0
}

func (x *InterfaceMetrics) GetTotalReceiveBytes() uint64 {
	if x != nil {
		return x.TotalReceiveBytes
	}
	return 0
}

func (x *InterfaceMetrics) GetTotalTransmitBytes() uint64 {
	if x != nil {
		return x.TotalTransmitBytes
	}
	return 0
}

func (x *InterfaceMetrics) GetNumPeers() int32 {
	if x != nil {
		return x.NumPeers
	}
	return 0
}

func (x *InterfaceMetrics) GetPeers() []*PeerMetrics {
	if x != nil {
		return x.Peers
	}
	return nil
}

// PeerMetrics are the metrics for a node's peer.
type PeerMetrics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// public_key is the public key of the peer.
	PublicKey string `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	// endpoint is the connected endpoint of the peer.
	Endpoint string `protobuf:"bytes,2,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	// persistent_keep_alive is the persistent keep alive interval for the peer.
	PersistentKeepAlive string `protobuf:"bytes,3,opt,name=persistent_keep_alive,json=persistentKeepAlive,proto3" json:"persistent_keep_alive,omitempty"`
	// last_handshake_time is the last handshake time for the peer.
	LastHandshakeTime string `protobuf:"bytes,4,opt,name=last_handshake_time,json=lastHandshakeTime,proto3" json:"last_handshake_time,omitempty"`
	// allowed_ips is the list of allowed IPs for the peer.
	AllowedIps []string `protobuf:"bytes,5,rep,name=allowed_ips,json=allowedIps,proto3" json:"allowed_ips,omitempty"`
	// protocol_version is the version of the wireguard protocol negotiated with the peer.
	ProtocolVersion int64 `protobuf:"varint,6,opt,name=protocol_version,json=protocolVersion,proto3" json:"protocol_version,omitempty"`
	// receive_bytes is the bytes received from the peer.
	ReceiveBytes uint64 `protobuf:"varint,7,opt,name=receive_bytes,json=receiveBytes,proto3" json:"receive_bytes,omitempty"`
	// transmit_bytes is the bytes transmitted to the peer.
	TransmitBytes uint64 `protobuf:"varint,8,opt,name=transmit_bytes,json=transmitBytes,proto3" json:"transmit_bytes,omitempty"`
}

func (x *PeerMetrics) Reset() {
	*x = PeerMetrics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_node_metrics_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeerMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerMetrics) ProtoMessage() {}

func (x *PeerMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_v1_node_metrics_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerMetrics.ProtoReflect.Descriptor instead.
func (*PeerMetrics) Descriptor() ([]byte, []int) {
	return file_v1_node_metrics_proto_rawDescGZIP(), []int{1}
}

func (x *PeerMetrics) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *PeerMetrics) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *PeerMetrics) GetPersistentKeepAlive() string {
	if x != nil {
		return x.PersistentKeepAlive
	}
	return ""
}

func (x *PeerMetrics) GetLastHandshakeTime() string {
	if x != nil {
		return x.LastHandshakeTime
	}
	return ""
}

func (x *PeerMetrics) GetAllowedIps() []string {
	if x != nil {
		return x.AllowedIps
	}
	return nil
}

func (x *PeerMetrics) GetProtocolVersion() int64 {
	if x != nil {
		return x.ProtocolVersion
	}
	return 0
}

func (x *PeerMetrics) GetReceiveBytes() uint64 {
	if x != nil {
		return x.ReceiveBytes
	}
	return 0
}

func (x *PeerMetrics) GetTransmitBytes() uint64 {
	if x != nil {
		return x.TransmitBytes
	}
	return 0
}

var File_v1_node_metrics_proto protoreflect.FileDescriptor

var file_v1_node_metrics_proto_rawDesc = []byte{
	0x0a, 0x15, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x76, 0x31, 0x22, 0xeb, 0x02, 0x0a, 0x10,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79,
	0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x76, 0x34, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x56, 0x34, 0x12,
	0x1d, 0x0a, 0x0a, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x76, 0x36, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x56, 0x36, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x5f, 0x70, 0x6f, 0x72,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x50,
	0x6f, 0x72, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x42, 0x79,
	0x74, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x6d, 0x69, 0x74, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x74,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x75, 0x6d, 0x5f, 0x70, 0x65, 0x65,
	0x72, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6e, 0x75, 0x6d, 0x50, 0x65, 0x65,
	0x72, 0x73, 0x12, 0x25, 0x0a, 0x05, 0x70, 0x65, 0x65, 0x72, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x52, 0x05, 0x70, 0x65, 0x65, 0x72, 0x73, 0x22, 0xc4, 0x02, 0x0a, 0x0b, 0x50, 0x65,
	0x65, 0x72, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x74, 0x5f, 0x6b, 0x65, 0x65, 0x70, 0x5f, 0x61, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x13, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x4b,
	0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x68, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x48, 0x61, 0x6e, 0x64, 0x73,
	0x68, 0x61, 0x6b, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6c, 0x6c, 0x6f,
	0x77, 0x65, 0x64, 0x5f, 0x69, 0x70, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x61,
	0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x49, 0x70, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x5f,
	0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x6d, 0x69, 0x74, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x74, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x42, 0x6c, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x42, 0x10, 0x4e, 0x6f, 0x64, 0x65,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x28,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x65, 0x62, 0x6d, 0x65,
	0x73, 0x68, 0x70, 0x72, 0x6f, 0x6a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x77, 0x65, 0x62, 0x6d, 0x65,
	0x73, 0x68, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x56, 0x58, 0x58, 0xaa, 0x02,
	0x02, 0x56, 0x31, 0xca, 0x02, 0x02, 0x56, 0x31, 0xe2, 0x02, 0x0e, 0x56, 0x31, 0x5c, 0x47, 0x50,
	0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x02, 0x56, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v1_node_metrics_proto_rawDescOnce sync.Once
	file_v1_node_metrics_proto_rawDescData = file_v1_node_metrics_proto_rawDesc
)

func file_v1_node_metrics_proto_rawDescGZIP() []byte {
	file_v1_node_metrics_proto_rawDescOnce.Do(func() {
		file_v1_node_metrics_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_node_metrics_proto_rawDescData)
	})
	return file_v1_node_metrics_proto_rawDescData
}

var file_v1_node_metrics_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_v1_node_metrics_proto_goTypes = []interface{}{
	(*InterfaceMetrics)(nil), // 0: v1.InterfaceMetrics
	(*PeerMetrics)(nil),      // 1: v1.PeerMetrics
}
var file_v1_node_metrics_proto_depIdxs = []int32{
	1, // 0: v1.InterfaceMetrics.peers:type_name -> v1.PeerMetrics
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_v1_node_metrics_proto_init() }
func file_v1_node_metrics_proto_init() {
	if File_v1_node_metrics_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_v1_node_metrics_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterfaceMetrics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_node_metrics_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PeerMetrics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_node_metrics_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_v1_node_metrics_proto_goTypes,
		DependencyIndexes: file_v1_node_metrics_proto_depIdxs,
		MessageInfos:      file_v1_node_metrics_proto_msgTypes,
	}.Build()
	File_v1_node_metrics_proto = out.File
	file_v1_node_metrics_proto_rawDesc = nil
	file_v1_node_metrics_proto_goTypes = nil
	file_v1_node_metrics_proto_depIdxs = nil
}
