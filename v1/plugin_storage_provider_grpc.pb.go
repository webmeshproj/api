//
//Copyright 2023 Avi Zimmerman <avi.zimmerman@gmail.com>
//
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             (unknown)
// source: v1/plugin_storage_provider.proto

package v1

import (
	grpc "google.golang.org/grpc"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const ()

// StorageProviderPlguinClient is the client API for StorageProviderPlguin service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type StorageProviderPlguinClient interface {
}

type storageProviderPlguinClient struct {
	cc grpc.ClientConnInterface
}

func NewStorageProviderPlguinClient(cc grpc.ClientConnInterface) StorageProviderPlguinClient {
	return &storageProviderPlguinClient{cc}
}

// StorageProviderPlguinServer is the server API for StorageProviderPlguin service.
// All implementations must embed UnimplementedStorageProviderPlguinServer
// for forward compatibility
type StorageProviderPlguinServer interface {
	mustEmbedUnimplementedStorageProviderPlguinServer()
}

// UnimplementedStorageProviderPlguinServer must be embedded to have forward compatible implementations.
type UnimplementedStorageProviderPlguinServer struct {
}

func (UnimplementedStorageProviderPlguinServer) mustEmbedUnimplementedStorageProviderPlguinServer() {}

// UnsafeStorageProviderPlguinServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to StorageProviderPlguinServer will
// result in compilation errors.
type UnsafeStorageProviderPlguinServer interface {
	mustEmbedUnimplementedStorageProviderPlguinServer()
}

func RegisterStorageProviderPlguinServer(s grpc.ServiceRegistrar, srv StorageProviderPlguinServer) {
	s.RegisterService(&StorageProviderPlguin_ServiceDesc, srv)
}

// StorageProviderPlguin_ServiceDesc is the grpc.ServiceDesc for StorageProviderPlguin service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var StorageProviderPlguin_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "v1.StorageProviderPlguin",
	HandlerType: (*StorageProviderPlguinServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "v1/plugin_storage_provider.proto",
}
